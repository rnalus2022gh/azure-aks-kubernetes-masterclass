1st

# Create RG
az group create --name aks-rg1 --location eastasia
az deployment group create --resource-group aks-rg1 --template-file template/template.json --parameters template/parameters.json
az aks get-credentials --resource-group aks-rg1 --name aksdemo1

https://github.com/rnalus/azure-aks-kubernetes-masterclass/tree/master/01-Create-AKS-Cluster
kubectl get nodes -o wide
cd /home
PS /home/rome/.kube> ls -l
total 16
drwxr-x--- 4 rome rome 4096 Mar 18 13:21 cache
-rw------- 1 rome rome 9686 Mar 18 13:21 config
PS /home/rome/.kube> cat ./config

kubectl get namespaces
kubectl get pods
kubectl get pods --all-namespaces
kubectl get all --all-namespaces

# List Namespaces
kubectl get namespaces
kubectl get ns


DELETE Resources
az group delete --name aks-rg1 --yes
az group delete --name NetworkWatcherRG --yes
az group delete --name DefaultResourceGroup-SEA --yes

=============================================================
# O365 VMs

az group create --name o365rg --location eastasia

Get-AzVMImageSku -Location eastasia -PublisherName MicrosoftWindowsServer -Offer WindowsServer | Select Skus
Get-AzVMImageOffer -Location eastasia -PublisherName MicrosoftWindowsServer | Select Offer
Get-AzVMImagePublisher -Location eastasia | Select PublisherName

dc01
az deployment group create --resource-group O365RG --template-file O365_Udemy/DC01template.json --parameters O365_Udemy/DC01parameters.json

ADFS
az deployment group create --resource-group O365RG --template-file O365_Udemy/ADFStemplate.json --parameters O365_Udemy/ADFSparameters.json

import-module adsync
get-adsyncscheduler
Set-ADSyncScheduler -CustomizedSyncCycleInterval 00:45:00
Start-ADSyncSyncCycle
Start-ADSyncSyncCycle -PolicyType Initial

*ms-ds-consistencyguid will only come up if user has same domain in O365
=========================================================================

# 3 VM Node Pool
az deployment group create --resource-group aks-rg1 --template-file template/template2.json --parameters template/parameters.json

az group create --name pscka --location southeastasia
# c1-cp1 - Master Node 
az deployment group create --resource-group pscka --template-file templates/vmtemplate.json --parameters templates/vmparameters.json
# c1-node1 - Worker Node
az deployment group create --resource-group pscka --template-file templates/vmtemplate-n1.json --parameters templates/vmparameters-n1.json

https://askubuntu.com/questions/219545/dpkg-error-dpkg-status-database-is-locked-by-another-process

In our case there was no running process (PID) so I hard-stopped and rebooted the VPS.

Next, there are several lock files that might need to be removed:

sudo rm /var/lib/dpkg/lock
sudo rm /var/lib/dpkg/lock-frontend
sudo rm /var/cache/apt/archives/lock

Then you can fix dpkg as suggested:

sudo apt update
sudo dpkg --configure -a

sudo rm /var/lib/dpkg/lock
sudo dpkg --configure -a

--
#Ok, so now that we're tired of typing commands out, let's enable bash auto-complete of our kubectl commands
sudo apt-get install -y bash-completion
echo "source <(kubectl completion bash)" >> ~/.bashrc
source ~/.bashrc
kubectl g[tab][tab] po[tab][tab] --all[tab][tab]
-------------------------
az group delete --name pscka --yes
az group delete --name NetworkWatcherRG --yes

PS-CKA
kubeadm join 172.16.94.4:6443 --token abcdef.0123456789abcdef \
        --discovery-token-ca-cert-hash sha256:aa70fe9ab04375b422fe5cc1b2913de21a15acad305d7f4c8a460a0dceaf6f85


 cd /d/azure-aks-kubernetes-masterclass/

# Create AKS cluster
az deployment group create --resource-group aks-rg1 --template-file <path-to-template> --parameters <path-to-parameters>
az deployment group create --resource-group aks-rg1 --template-file template/template.json --parameters template/parameters.json
az aks show -n aksdemo1 -g aks-rg1

# get AKS credentials / authentication
az aks get-credentials --resource-group aks-rg1 --name aksdemo1

# Get the resource group name of the AKS cluster 
az aks show --resource-group aks-rg1 --name aksdemo1 --query nodeResourceGroup -o tsv
MC_aks-rg1_aksdemo1_southeastasia

# REPLACE - Create Public IP: Replace Resource Group value
az network public-ip create --resource-group MC_aks-rg1_aksdemo1_southeastasia --name myAKSPublicIPForIngress --sku Standard --allocation-method static --query publicIp.ipAddress -o tsv
13.76.210.86 Oct15
52.163.71.159

# Show IP ipAddress
az network public-ip show --name myAKSPublicIPForIngress --resource-group MC_aks-rg1_aksdemo1_southeastasia --query ipAddress

az network public-ip list --query "[1].{Name:name,IP:ipAddress}"

How to use Azure Resource Manager (ARM) deployment templates with Azure CLI
https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/deploy-cli

Tutorial: Use parameter files to deploy your ARM template
https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/template-tutorial-use-parameter-file?tabs=azure-cli

Deploy resources with ARM templates and Azure PowerShell
https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/deploy-powershell

Effective ways to delete resources in a resource group on Azure in 2021
https://www.codeisahighway.com/effective-ways-to-delete-resources-in-a-resource-group-on-azure-in-2021/

https://docs.microsoft.com/en-us/cli/azure/group?view=azure-cli-latest#az_group_delete

az group delete --name 
                [--force-deletion-types]
                [--no-wait]
                [--subscription]
                [--yes]

https://docs.microsoft.com/en-us/cli/azure/network/vnet?view=azure-cli-latest#az_network_vnet_delete
az network vnet delete [--ids]
                       [--name]
                       [--resource-group]
                       [--subscription]

# Delete VNet
az network vnet delete --name aks-rg1-vnet --resource-group aks-rg1

# Delete AKS cluster
az aks delete --name aksdemo1 --resource-group aks-rg1 --yes

# Delete a RG
az group delete --name aks-rg1 --yes
az group delete --name NetworkWatcherRG --yes
az group delete --name DefaultResourceGroup-SEA --yes

https://docs.microsoft.com/en-us/cli/azure/account?view=azure-cli-latest
az account list

Section 7 Azure MySQL Database
------------------------------
Deploy using template
az deployment group create --resource-group aks-rg1 --template-file template/dbtemplate.json --parameters template/dbparameters.json

https://www.base64encode.org/
Y3VyNUBOSUE=


# Rome - Delete Azure MySQL
az mysql server delete --name akswebappdbrome --resource-group aks-rg1 --yes

# Output of echo -n 'cur5@NIA' | base64
  db-password: Y3VyNUBOSUE=

Chapter12
-----------
# Rome - Create MSI using template
az deployment group create --resource-group aks-rg1 --template-file template/msitemplate.json --parameters template/msiparameters.json

# Verify ExternalDNS Logs
kubectl logs -f $(kubectl get po | egrep -o 'external-dns[A-Za-z0-9-]+')

# Replace DNS Zones Resource Group and yourdomain
az network dns record-set a list -g dns-zones -z thecure.fun 

# Select cluster context
kubectl config get-contexts
CURRENT   NAME             CLUSTER          AUTHINFO                       NAMESPACE
*         aksdemo1         aksdemo1         clusterUser_aks-rg1_aksdemo1
          docker-desktop   docker-desktop   docker-desktop

# Switch kubernetes cluster context
kubectl config use-context docker-desktop
Switched to context "docker-desktop".
kubectl config set-credentials cluster-admin --username=admin --password=cur5@NIA

# Aliasing
powershell 
Set-Alias -Name k -Value kubectl

Mac/Linux
alias k="kubectl"


# k8s lab online

1. Initialize a cluster master node

kubeadm init --apiserver-advertise-address $(hostname -i) --pod-network-cidr 10.5.0.0/16

2. Initialize a cluster networking

kubectl apply -f https://raw.githubusercontent.com/cloudnativelabs/kube-router/master/daemonset/kubeadm-kuberouter.yaml

3. Create a deployment

kubectl apply -f hhtps://rawgithubuserccontent.com/...


====Delete me
C:\Users\Rome\Downloads

az deployment group create --resource-group RG001 --template-file ExportedTemplate-RG001\template.json --parameters ExportedTemplate-RG001\parameters.json
